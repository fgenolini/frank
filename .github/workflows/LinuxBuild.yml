# Download, configure, and install OpenCV before building frank
# Relies on
#   Linux Ubuntu 20.04
#   OpenCV 4.2.0
#
# Copied from the CVUI CI action (github.com/Dovyski/cvui)
name: LinuxBuild

on:
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # Supported version for OpenCV
        opencv: [
          4.2.0
        ]
        compiler: [g++]
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Install dev dependencies
      run: |
        # Install OpenCV dev libraries
        sudo add-apt-repository "deb http://security.ubuntu.com/ubuntu focal-security main"
        sudo apt-get update
        sudo apt-get remove x264 libx264-dev -y
        sudo apt-get install -y \
                build-essential checkinstall cmake pkg-config \
                git \
                libopencv-dev python3-opencv

    - name: Download Microsoft GSL
      run: |
        curl -sL https://github.com/microsoft/GSL/archive/master.zip > GSL.zip
        unzip -q GSL.zip

    - name: Install Microsoft GSL (${{ matrix.compiler }})
      run: |
        # Microsoft GSL install code
        cd GSL-master
        # Create a new 'build' folder.
        mkdir build
        cd build
        # Set build instructions for Ubuntu distro.
        nice cmake -D CMAKE_BUILD_TYPE=RELEASE \
              -D CMAKE_CXX_COMPILER=${{ matrix.COMPILER }} \
              -D CMAKE_INSTALL_PREFIX=/usr/local \
              -D ENABLE_PRECOMPILED_HEADERS=${{ env.ENABLE_PRECOMPILED_HEADERS }} \
              ..
        nice make
        # Install to OS.
        sudo nice make install
        echo "Microsoft GSL installed."
        # We need to return to the repo "root" folder, so we can then 'cd' into the C++ project folder.
        cd ..

    - name: Build frank (${{ matrix.compiler }})
      run: |
        mkdir build.release
        cd build.release
        nice cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=${{ matrix.COMPILER }}
        nice make
        cd ..

    - name: Run tests
      run: |
        cd build.release
        nice ctest
        cd ..
