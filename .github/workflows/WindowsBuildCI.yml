# Download, configure, and install OpenCV and Microsoft GSL before building frank
# Relies on
#   Microsoft Windows Server 2019 (windows-2019)
#   Visual Studio 2019 (standard C++ 17)
#   OpenCV 4.3.0
#   Microsoft GSL 3.1.0
#

name: WindowsBuildCI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CMAKE_VERSION: 3.17.3
  BUILD_TYPE: Release

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows MSVC 2019", artifact: "Windows-MSVC.tar.xz",
            os: windows-2019,
            build_type: "Release", cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        # Supported version for OpenCV
        opencv: [
          4.3.0
        ]

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Download pre-built OpenCV
      id: download_opencv
      shell: cmake -P {0}
      run: |
        file(DOWNLOAD "https://github.com/opencv/opencv/releases/download/4.3.0/opencv-4.3.0-dldt-2020.2-vc16-avx2.zip" opencv-4.3.0.zip)
    
    - name: Extract pre-built OpenCV
      id: extract_opencv
      run: |
        cd ${{github.workspace}}
        tar -xf opencv-4.3.0.zip
      
    - name: Download Microsoft GSL source
      id: download_gsl
      shell: cmake -P {0}
      run: |
        file(DOWNLOAD "https://github.com/microsoft/GSL/archive/v3.1.0.zip" gsl-3.1.0.zip)
    
    - name: Extract Microsoft GSL source
      id: extract_gsl
      run: |
        cd ${{github.workspace}}
        tar -xf gsl-3.1.0.zip
    
    - name: Configure Microsoft GSL
      id: configure_gsl
      run: |
        cd ${{github.workspace}}\GSL-3.1.0
        mkdir build
        cd build
        cmake ..
    
    - name: Build Microsoft GSL
      id: build_gsl
      run: |
        cd ${{github.workspace}}\GSL-3.1.0\build
        cmake --build . --config Release
    
    - name: Install Microsoft GSL
      id: install_gsl
      run: |
        cd ${{github.workspace}}\GSL-3.1.0\build
        cmake --install . --prefix "${{github.workspace}}/GSL"

    - name: Configure frank video
      id: configure_frank_video
      run: |
        mkdir build
        cd build
        cmake -D"OpenCV_DIR":STRING="${{github.workspace}}/opencv/build/cmake" -D"Microsoft.GSL_DIR":STRING="${{github.workspace}}/GSL/share/cmake/Microsoft.GSL" ..

    - name: Build frank video
      id: build_frank_video
      run: |
        cmake --build build --config Release

    - name: Test
      id: test_frank_video
      run: |
        cd build
        ctest
